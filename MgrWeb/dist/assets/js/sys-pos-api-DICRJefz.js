import{a as s}from"./axios-CURSphCx.js";import{B as t,j as e}from"./index-DWGcUZYU.js";const a=function(s){return{apiSysPosAddPost:async(t,e={})=>{const a=new URL("/api/sysPos/add","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...e},r={},i={};if(s&&s.accessToken){const t="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+t}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in e.params)c.set(s,e.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...e.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysPosDeletePost:async(t,e={})=>{const a=new URL("/api/sysPos/delete","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...e},r={},i={};if(s&&s.accessToken){const t="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+t}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in e.params)c.set(s,e.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...e.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysPosListGet:async(t,e,a={})=>{const o=new URL("/api/sysPos/list","https://example.com");let n;s&&(n=s.baseOptions);const r={method:"GET",...n,...a},i={},c={};if(s&&s.accessToken){const t="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;i.Authorization="Bearer "+t}void 0!==t&&(c.Name=t),void 0!==e&&(c.Code=e);const p=new URLSearchParams(o.search);for(const s in c)p.set(s,c[s]);for(const s in a.params)p.set(s,a.params[s]);o.search=new URLSearchParams(p).toString();let h=n&&n.headers?n.headers:{};return r.headers={...i,...h,...a.headers},{url:o.pathname+o.search+o.hash,options:r}},apiSysPosUpdatePost:async(t,e={})=>{const a=new URL("/api/sysPos/update","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...e},r={},i={};if(s&&s.accessToken){const t="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+t}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in e.params)c.set(s,e.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...e.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}}}},o=function(t){return{async apiSysPosAddPost(o,n){const r=await a(t).apiSysPosAddPost(o,n);return(t=s,a=e)=>{const o={...r.options,url:a+r.url};return t.request(o)}},async apiSysPosDeletePost(o,n){const r=await a(t).apiSysPosDeletePost(o,n);return(t=s,a=e)=>{const o={...r.options,url:a+r.url};return t.request(o)}},async apiSysPosListGet(o,n,r){const i=await a(t).apiSysPosListGet(o,n,r);return(t=s,a=e)=>{const o={...i.options,url:a+i.url};return t.request(o)}},async apiSysPosUpdatePost(o,n){const r=await a(t).apiSysPosUpdatePost(o,n);return(t=s,a=e)=>{const o={...r.options,url:a+r.url};return t.request(o)}}}};class n extends t{async apiSysPosAddPost(s,t){return o(this.configuration).apiSysPosAddPost(s,t).then((s=>s(this.axios,this.basePath)))}async apiSysPosDeletePost(s,t){return o(this.configuration).apiSysPosDeletePost(s,t).then((s=>s(this.axios,this.basePath)))}async apiSysPosListGet(s,t,e){return o(this.configuration).apiSysPosListGet(s,t,e).then((s=>s(this.axios,this.basePath)))}async apiSysPosUpdatePost(s,t){return o(this.configuration).apiSysPosUpdatePost(s,t).then((s=>s(this.axios,this.basePath)))}}export{n as S};
