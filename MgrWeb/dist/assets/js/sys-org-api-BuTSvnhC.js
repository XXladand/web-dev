import{a as s}from"./axios-CURSphCx.js";import{B as e,j as t,R as a}from"./index-DWGcUZYU.js";const n=function(s){return{apiSysOrgAddPost:async(e,t={})=>{const a=new URL("/api/sysOrg/add","https://example.com");let n;s&&(n=s.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysOrgDeletePost:async(e,t={})=>{const a=new URL("/api/sysOrg/delete","https://example.com");let n;s&&(n=s.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysOrgListGet:async(e,t,n,o,r={})=>{if(null==e)throw new a("id","Required parameter id was null or undefined when calling apiSysOrgListGet.");const i=new URL("/api/sysOrg/list","https://example.com");let c;s&&(c=s.baseOptions);const p={method:"GET",...c,...r},h={},d={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+e}void 0!==t&&(d.Name=t),void 0!==n&&(d.Code=n),void 0!==o&&(d.Type=o),void 0!==e&&(d.Id=e);const y=new URLSearchParams(i.search);for(const s in d)y.set(s,d[s]);for(const s in r.params)y.set(s,r.params[s]);i.search=new URLSearchParams(y).toString();let u=c&&c.headers?c.headers:{};return p.headers={...h,...u,...r.headers},{url:i.pathname+i.search+i.hash,options:p}},apiSysOrgUpdatePost:async(e,t={})=>{const a=new URL("/api/sysOrg/update","https://example.com");let n;s&&(n=s.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:o}}}},o=function(e){return{async apiSysOrgAddPost(a,o){const r=await n(e).apiSysOrgAddPost(a,o);return(e=s,a=t)=>{const n={...r.options,url:a+r.url};return e.request(n)}},async apiSysOrgDeletePost(a,o){const r=await n(e).apiSysOrgDeletePost(a,o);return(e=s,a=t)=>{const n={...r.options,url:a+r.url};return e.request(n)}},async apiSysOrgListGet(a,o,r,i,c){const p=await n(e).apiSysOrgListGet(a,o,r,i,c);return(e=s,a=t)=>{const n={...p.options,url:a+p.url};return e.request(n)}},async apiSysOrgUpdatePost(a,o){const r=await n(e).apiSysOrgUpdatePost(a,o);return(e=s,a=t)=>{const n={...r.options,url:a+r.url};return e.request(n)}}}};class r extends e{async apiSysOrgAddPost(s,e){return o(this.configuration).apiSysOrgAddPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysOrgDeletePost(s,e){return o(this.configuration).apiSysOrgDeletePost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysOrgListGet(s,e,t,a,n){return o(this.configuration).apiSysOrgListGet(s,e,t,a,n).then((s=>s(this.axios,this.basePath)))}async apiSysOrgUpdatePost(s,e){return o(this.configuration).apiSysOrgUpdatePost(s,e).then((s=>s(this.axios,this.basePath)))}}export{r as S};
