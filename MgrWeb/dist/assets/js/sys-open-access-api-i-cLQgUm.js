import{a as s}from"./axios-CURSphCx.js";import{B as e,j as t}from"./index-DWGcUZYU.js";const a=function(s){return{apiSysOpenAccessAddPost:async(e,t={})=>{const a=new URL("/api/sysOpenAccess/add","https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...t},o={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;o.Authorization="Bearer "+e}o["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const s in r)i.set(s,r[s]);for(const s in t.params)i.set(s,t.params[s]);a.search=new URLSearchParams(i).toString();let p=n&&n.headers?n.headers:{};c.headers={...o,...p,...t.headers};const h="string"!=typeof e||"application/json"===c.headers["Content-Type"];return c.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:c}},apiSysOpenAccessDeletePost:async(e,t={})=>{const a=new URL("/api/sysOpenAccess/delete","https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...t},o={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;o.Authorization="Bearer "+e}o["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const s in r)i.set(s,r[s]);for(const s in t.params)i.set(s,t.params[s]);a.search=new URLSearchParams(i).toString();let p=n&&n.headers?n.headers:{};c.headers={...o,...p,...t.headers};const h="string"!=typeof e||"application/json"===c.headers["Content-Type"];return c.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:c}},apiSysOpenAccessGenerateSignaturePost:async(e,t={})=>{const a=new URL("/api/sysOpenAccess/generateSignature","https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...t},o={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;o.Authorization="Bearer "+e}o["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const s in r)i.set(s,r[s]);for(const s in t.params)i.set(s,t.params[s]);a.search=new URLSearchParams(i).toString();let p=n&&n.headers?n.headers:{};c.headers={...o,...p,...t.headers};const h="string"!=typeof e||"application/json"===c.headers["Content-Type"];return c.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:c}},apiSysOpenAccessPagePost:async(e,t={})=>{const a=new URL("/api/sysOpenAccess/page","https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...t},o={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;o.Authorization="Bearer "+e}o["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const s in r)i.set(s,r[s]);for(const s in t.params)i.set(s,t.params[s]);a.search=new URLSearchParams(i).toString();let p=n&&n.headers?n.headers:{};c.headers={...o,...p,...t.headers};const h="string"!=typeof e||"application/json"===c.headers["Content-Type"];return c.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:c}},apiSysOpenAccessSecretPost:async(e={})=>{const t=new URL("/api/sysOpenAccess/secret","https://example.com");let a;s&&(a=s.baseOptions);const n={method:"POST",...a,...e},c={},o={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;c.Authorization="Bearer "+e}const r=new URLSearchParams(t.search);for(const s in o)r.set(s,o[s]);for(const s in e.params)r.set(s,e.params[s]);t.search=new URLSearchParams(r).toString();let i=a&&a.headers?a.headers:{};return n.headers={...c,...i,...e.headers},{url:t.pathname+t.search+t.hash,options:n}},apiSysOpenAccessUpdatePost:async(e,t={})=>{const a=new URL("/api/sysOpenAccess/update","https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...t},o={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;o.Authorization="Bearer "+e}o["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const s in r)i.set(s,r[s]);for(const s in t.params)i.set(s,t.params[s]);a.search=new URLSearchParams(i).toString();let p=n&&n.headers?n.headers:{};c.headers={...o,...p,...t.headers};const h="string"!=typeof e||"application/json"===c.headers["Content-Type"];return c.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:c}}}},n=function(e){return{async apiSysOpenAccessAddPost(n,c){const o=await a(e).apiSysOpenAccessAddPost(n,c);return(e=s,a=t)=>{const n={...o.options,url:a+o.url};return e.request(n)}},async apiSysOpenAccessDeletePost(n,c){const o=await a(e).apiSysOpenAccessDeletePost(n,c);return(e=s,a=t)=>{const n={...o.options,url:a+o.url};return e.request(n)}},async apiSysOpenAccessGenerateSignaturePost(n,c){const o=await a(e).apiSysOpenAccessGenerateSignaturePost(n,c);return(e=s,a=t)=>{const n={...o.options,url:a+o.url};return e.request(n)}},async apiSysOpenAccessPagePost(n,c){const o=await a(e).apiSysOpenAccessPagePost(n,c);return(e=s,a=t)=>{const n={...o.options,url:a+o.url};return e.request(n)}},async apiSysOpenAccessSecretPost(n){const c=await a(e).apiSysOpenAccessSecretPost(n);return(e=s,a=t)=>{const n={...c.options,url:a+c.url};return e.request(n)}},async apiSysOpenAccessUpdatePost(n,c){const o=await a(e).apiSysOpenAccessUpdatePost(n,c);return(e=s,a=t)=>{const n={...o.options,url:a+o.url};return e.request(n)}}}};class c extends e{async apiSysOpenAccessAddPost(s,e){return n(this.configuration).apiSysOpenAccessAddPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysOpenAccessDeletePost(s,e){return n(this.configuration).apiSysOpenAccessDeletePost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysOpenAccessGenerateSignaturePost(s,e){return n(this.configuration).apiSysOpenAccessGenerateSignaturePost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysOpenAccessPagePost(s,e){return n(this.configuration).apiSysOpenAccessPagePost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysOpenAccessSecretPost(s){return n(this.configuration).apiSysOpenAccessSecretPost(s).then((s=>s(this.axios,this.basePath)))}async apiSysOpenAccessUpdatePost(s,e){return n(this.configuration).apiSysOpenAccessUpdatePost(s,e).then((s=>s(this.axios,this.basePath)))}}export{c as S};
