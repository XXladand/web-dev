import{a as s}from"./axios-CURSphCx.js";import{B as e,j as t}from"./index-DWGcUZYU.js";const a=function(s){return{apiSysJobAddJobDetailPost:async(e,t={})=>{const a=new URL("/api/sysJob/addJobDetail","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobAddJobTriggerPost:async(e,t={})=>{const a=new URL("/api/sysJob/addJobTrigger","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobCancelJobPost:async(e,t={})=>{const a=new URL("/api/sysJob/cancelJob","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobCancelSleepPost:async(e={})=>{const t=new URL("/api/sysJob/cancelSleep","https://example.com");let a;s&&(a=s.baseOptions);const o={method:"POST",...a,...e},n={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;n.Authorization="Bearer "+e}const i=new URLSearchParams(t.search);for(const s in r)i.set(s,r[s]);for(const s in e.params)i.set(s,e.params[s]);t.search=new URLSearchParams(i).toString();let c=a&&a.headers?a.headers:{};return o.headers={...n,...c,...e.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysJobDeleteJobDetailPost:async(e,t={})=>{const a=new URL("/api/sysJob/deleteJobDetail","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobDeleteJobTriggerPost:async(e,t={})=>{const a=new URL("/api/sysJob/deleteJobTrigger","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobJobClusterListGet:async(e={})=>{const t=new URL("/api/sysJob/jobClusterList","https://example.com");let a;s&&(a=s.baseOptions);const o={method:"GET",...a,...e},n={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;n.Authorization="Bearer "+e}const i=new URLSearchParams(t.search);for(const s in r)i.set(s,r[s]);for(const s in e.params)i.set(s,e.params[s]);t.search=new URLSearchParams(i).toString();let c=a&&a.headers?a.headers:{};return o.headers={...n,...c,...e.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysJobJobTriggerListGet:async(e,t={})=>{const a=new URL("/api/sysJob/jobTriggerList","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"GET",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}void 0!==e&&(i.JobId=e);const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};return n.headers={...r,...p,...t.headers},{url:a.pathname+a.search+a.hash,options:n}},apiSysJobPageJobDetailPost:async(e,t={})=>{const a=new URL("/api/sysJob/pageJobDetail","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobPageJobTriggerRecordPost:async(e,t={})=>{const a=new URL("/api/sysJob/pageJobTriggerRecord","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobPauseAllJobPost:async(e={})=>{const t=new URL("/api/sysJob/pauseAllJob","https://example.com");let a;s&&(a=s.baseOptions);const o={method:"POST",...a,...e},n={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;n.Authorization="Bearer "+e}const i=new URLSearchParams(t.search);for(const s in r)i.set(s,r[s]);for(const s in e.params)i.set(s,e.params[s]);t.search=new URLSearchParams(i).toString();let c=a&&a.headers?a.headers:{};return o.headers={...n,...c,...e.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysJobPauseJobPost:async(e,t={})=>{const a=new URL("/api/sysJob/pauseJob","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobPauseTriggerPost:async(e,t={})=>{const a=new URL("/api/sysJob/pauseTrigger","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobPersistAllPost:async(e={})=>{const t=new URL("/api/sysJob/persistAll","https://example.com");let a;s&&(a=s.baseOptions);const o={method:"POST",...a,...e},n={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;n.Authorization="Bearer "+e}const i=new URLSearchParams(t.search);for(const s in r)i.set(s,r[s]);for(const s in e.params)i.set(s,e.params[s]);t.search=new URLSearchParams(i).toString();let c=a&&a.headers?a.headers:{};return o.headers={...n,...c,...e.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysJobRunJobPost:async(e,t={})=>{const a=new URL("/api/sysJob/runJob","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobStartAllJobPost:async(e={})=>{const t=new URL("/api/sysJob/startAllJob","https://example.com");let a;s&&(a=s.baseOptions);const o={method:"POST",...a,...e},n={},r={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;n.Authorization="Bearer "+e}const i=new URLSearchParams(t.search);for(const s in r)i.set(s,r[s]);for(const s in e.params)i.set(s,e.params[s]);t.search=new URLSearchParams(i).toString();let c=a&&a.headers?a.headers:{};return o.headers={...n,...c,...e.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysJobStartJobPost:async(e,t={})=>{const a=new URL("/api/sysJob/startJob","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobStartTriggerPost:async(e,t={})=>{const a=new URL("/api/sysJob/startTrigger","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobUpdateJobDetailPost:async(e,t={})=>{const a=new URL("/api/sysJob/updateJobDetail","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysJobUpdateJobTriggerPost:async(e,t={})=>{const a=new URL("/api/sysJob/updateJobTrigger","https://example.com");let o;s&&(o=s.baseOptions);const n={method:"POST",...o,...t},r={},i={};if(s&&s.accessToken){const e="function"==typeof s.accessToken?await s.accessToken():await s.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const s in i)c.set(s,i[s]);for(const s in t.params)c.set(s,t.params[s]);a.search=new URLSearchParams(c).toString();let p=o&&o.headers?o.headers:{};n.headers={...r,...p,...t.headers};const h="string"!=typeof e||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}}}},o=function(e){return{async apiSysJobAddJobDetailPost(o,n){const r=await a(e).apiSysJobAddJobDetailPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobAddJobTriggerPost(o,n){const r=await a(e).apiSysJobAddJobTriggerPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobCancelJobPost(o,n){const r=await a(e).apiSysJobCancelJobPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobCancelSleepPost(o){const n=await a(e).apiSysJobCancelSleepPost(o);return(e=s,a=t)=>{const o={...n.options,url:a+n.url};return e.request(o)}},async apiSysJobDeleteJobDetailPost(o,n){const r=await a(e).apiSysJobDeleteJobDetailPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobDeleteJobTriggerPost(o,n){const r=await a(e).apiSysJobDeleteJobTriggerPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobJobClusterListGet(o){const n=await a(e).apiSysJobJobClusterListGet(o);return(e=s,a=t)=>{const o={...n.options,url:a+n.url};return e.request(o)}},async apiSysJobJobTriggerListGet(o,n){const r=await a(e).apiSysJobJobTriggerListGet(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobPageJobDetailPost(o,n){const r=await a(e).apiSysJobPageJobDetailPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobPageJobTriggerRecordPost(o,n){const r=await a(e).apiSysJobPageJobTriggerRecordPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobPauseAllJobPost(o){const n=await a(e).apiSysJobPauseAllJobPost(o);return(e=s,a=t)=>{const o={...n.options,url:a+n.url};return e.request(o)}},async apiSysJobPauseJobPost(o,n){const r=await a(e).apiSysJobPauseJobPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobPauseTriggerPost(o,n){const r=await a(e).apiSysJobPauseTriggerPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobPersistAllPost(o){const n=await a(e).apiSysJobPersistAllPost(o);return(e=s,a=t)=>{const o={...n.options,url:a+n.url};return e.request(o)}},async apiSysJobRunJobPost(o,n){const r=await a(e).apiSysJobRunJobPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobStartAllJobPost(o){const n=await a(e).apiSysJobStartAllJobPost(o);return(e=s,a=t)=>{const o={...n.options,url:a+n.url};return e.request(o)}},async apiSysJobStartJobPost(o,n){const r=await a(e).apiSysJobStartJobPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobStartTriggerPost(o,n){const r=await a(e).apiSysJobStartTriggerPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobUpdateJobDetailPost(o,n){const r=await a(e).apiSysJobUpdateJobDetailPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}},async apiSysJobUpdateJobTriggerPost(o,n){const r=await a(e).apiSysJobUpdateJobTriggerPost(o,n);return(e=s,a=t)=>{const o={...r.options,url:a+r.url};return e.request(o)}}}};class n extends e{async apiSysJobAddJobDetailPost(s,e){return o(this.configuration).apiSysJobAddJobDetailPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobAddJobTriggerPost(s,e){return o(this.configuration).apiSysJobAddJobTriggerPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobCancelJobPost(s,e){return o(this.configuration).apiSysJobCancelJobPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobCancelSleepPost(s){return o(this.configuration).apiSysJobCancelSleepPost(s).then((s=>s(this.axios,this.basePath)))}async apiSysJobDeleteJobDetailPost(s,e){return o(this.configuration).apiSysJobDeleteJobDetailPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobDeleteJobTriggerPost(s,e){return o(this.configuration).apiSysJobDeleteJobTriggerPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobJobClusterListGet(s){return o(this.configuration).apiSysJobJobClusterListGet(s).then((s=>s(this.axios,this.basePath)))}async apiSysJobJobTriggerListGet(s,e){return o(this.configuration).apiSysJobJobTriggerListGet(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobPageJobDetailPost(s,e){return o(this.configuration).apiSysJobPageJobDetailPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobPageJobTriggerRecordPost(s,e){return o(this.configuration).apiSysJobPageJobTriggerRecordPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobPauseAllJobPost(s){return o(this.configuration).apiSysJobPauseAllJobPost(s).then((s=>s(this.axios,this.basePath)))}async apiSysJobPauseJobPost(s,e){return o(this.configuration).apiSysJobPauseJobPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobPauseTriggerPost(s,e){return o(this.configuration).apiSysJobPauseTriggerPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobPersistAllPost(s){return o(this.configuration).apiSysJobPersistAllPost(s).then((s=>s(this.axios,this.basePath)))}async apiSysJobRunJobPost(s,e){return o(this.configuration).apiSysJobRunJobPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobStartAllJobPost(s){return o(this.configuration).apiSysJobStartAllJobPost(s).then((s=>s(this.axios,this.basePath)))}async apiSysJobStartJobPost(s,e){return o(this.configuration).apiSysJobStartJobPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobStartTriggerPost(s,e){return o(this.configuration).apiSysJobStartTriggerPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobUpdateJobDetailPost(s,e){return o(this.configuration).apiSysJobUpdateJobDetailPost(s,e).then((s=>s(this.axios,this.basePath)))}async apiSysJobUpdateJobTriggerPost(s,e){return o(this.configuration).apiSysJobUpdateJobTriggerPost(s,e).then((s=>s(this.axios,this.basePath)))}}export{n as S};
