import{a}from"./axios-CURSphCx.js";import{B as e,j as s,R as t}from"./index-DWGcUZYU.js";const n=function(a){return{apiSysDatabaseAddColumnPost:async(e,s={})=>{const t=new URL("/api/sysDatabase/addColumn","https://example.com");let n;a&&(n=a.baseOptions);const o={method:"POST",...n,...s},r={},i={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(t.search);for(const a in i)c.set(a,i[a]);for(const a in s.params)c.set(a,s.params[a]);t.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...s.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseAddTablePost:async(e,s={})=>{const t=new URL("/api/sysDatabase/addTable","https://example.com");let n;a&&(n=a.baseOptions);const o={method:"POST",...n,...s},r={},i={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(t.search);for(const a in i)c.set(a,i[a]);for(const a in s.params)c.set(a,s.params[a]);t.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...s.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseBackupDatabasePost:async(e={})=>{const s=new URL("/api/sysDatabase/backupDatabase","https://example.com");let t;a&&(t=a.baseOptions);const n={method:"POST",...t,...e},o={},r={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;o.Authorization="Bearer "+e}const i=new URLSearchParams(s.search);for(const a in r)i.set(a,r[a]);for(const a in e.params)i.set(a,e.params[a]);s.search=new URLSearchParams(i).toString();let c=t&&t.headers?t.headers:{};return n.headers={...o,...c,...e.headers},{url:s.pathname+s.search+s.hash,options:n}},apiSysDatabaseColumnListTableNameConfigIdGet:async(e,s,n={})=>{if(null==e)throw new t("tableName","Required parameter tableName was null or undefined when calling apiSysDatabaseColumnListTableNameConfigIdGet.");if(null==s)throw new t("configId","Required parameter configId was null or undefined when calling apiSysDatabaseColumnListTableNameConfigIdGet.");const o="/api/sysDatabase/columnList/{tableName}/{configId}".replace("{tableName}",encodeURIComponent(String(e))).replace("{configId}",encodeURIComponent(String(s))),r=new URL(o,"https://example.com");let i;a&&(i=a.baseOptions);const c={method:"GET",...i,...n},p={},h={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;p.Authorization="Bearer "+e}const l=new URLSearchParams(r.search);for(const a in h)l.set(a,h[a]);for(const a in n.params)l.set(a,n.params[a]);r.search=new URLSearchParams(l).toString();let u=i&&i.headers?i.headers:{};return c.headers={...p,...u,...n.headers},{url:r.pathname+r.search+r.hash,options:c}},apiSysDatabaseCreateEntityPost:async(e,s={})=>{const t=new URL("/api/sysDatabase/createEntity","https://example.com");let n;a&&(n=a.baseOptions);const o={method:"POST",...n,...s},r={},i={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(t.search);for(const a in i)c.set(a,i[a]);for(const a in s.params)c.set(a,s.params[a]);t.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...s.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseCreateSeedDataPost:async(e,s={})=>{const t=new URL("/api/sysDatabase/createSeedData","https://example.com");let n;a&&(n=a.baseOptions);const o={method:"POST",...n,...s},r={},i={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(t.search);for(const a in i)c.set(a,i[a]);for(const a in s.params)c.set(a,s.params[a]);t.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...s.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseDbTypeListConfigIdGet:async(e,s={})=>{if(null==e)throw new t("configId","Required parameter configId was null or undefined when calling apiSysDatabaseDbTypeListConfigIdGet.");const n="/api/sysDatabase/dbTypeList/{configId}".replace("{configId}",encodeURIComponent(String(e))),o=new URL(n,"https://example.com");let r;a&&(r=a.baseOptions);const i={method:"GET",...r,...s},c={},p={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;c.Authorization="Bearer "+e}const h=new URLSearchParams(o.search);for(const a in p)h.set(a,p[a]);for(const a in s.params)h.set(a,s.params[a]);o.search=new URLSearchParams(h).toString();let l=r&&r.headers?r.headers:{};return i.headers={...c,...l,...s.headers},{url:o.pathname+o.search+o.hash,options:i}},apiSysDatabaseDeleteColumnPost:async(e,s={})=>{const t=new URL("/api/sysDatabase/deleteColumn","https://example.com");let n;a&&(n=a.baseOptions);const o={method:"POST",...n,...s},r={},i={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(t.search);for(const a in i)c.set(a,i[a]);for(const a in s.params)c.set(a,s.params[a]);t.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...s.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseDeleteTablePost:async(e,s={})=>{const t=new URL("/api/sysDatabase/deleteTable","https://example.com");let n;a&&(n=a.baseOptions);const o={method:"POST",...n,...s},r={},i={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(t.search);for(const a in i)c.set(a,i[a]);for(const a in s.params)c.set(a,s.params[a]);t.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...s.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseListGet:async(e={})=>{const s=new URL("/api/sysDatabase/list","https://example.com");let t;a&&(t=a.baseOptions);const n={method:"GET",...t,...e},o={},r={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;o.Authorization="Bearer "+e}const i=new URLSearchParams(s.search);for(const a in r)i.set(a,r[a]);for(const a in e.params)i.set(a,e.params[a]);s.search=new URLSearchParams(i).toString();let c=t&&t.headers?t.headers:{};return n.headers={...o,...c,...e.headers},{url:s.pathname+s.search+s.hash,options:n}},apiSysDatabaseTableListConfigIdGet:async(e,s={})=>{if(null==e)throw new t("configId","Required parameter configId was null or undefined when calling apiSysDatabaseTableListConfigIdGet.");const n="/api/sysDatabase/tableList/{configId}".replace("{configId}",encodeURIComponent(String(e))),o=new URL(n,"https://example.com");let r;a&&(r=a.baseOptions);const i={method:"GET",...r,...s},c={},p={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;c.Authorization="Bearer "+e}const h=new URLSearchParams(o.search);for(const a in p)h.set(a,p[a]);for(const a in s.params)h.set(a,s.params[a]);o.search=new URLSearchParams(h).toString();let l=r&&r.headers?r.headers:{};return i.headers={...c,...l,...s.headers},{url:o.pathname+o.search+o.hash,options:i}},apiSysDatabaseUpdateColumnPost:async(e,s={})=>{const t=new URL("/api/sysDatabase/updateColumn","https://example.com");let n;a&&(n=a.baseOptions);const o={method:"POST",...n,...s},r={},i={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(t.search);for(const a in i)c.set(a,i[a]);for(const a in s.params)c.set(a,s.params[a]);t.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...s.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseUpdateTablePost:async(e,s={})=>{const t=new URL("/api/sysDatabase/updateTable","https://example.com");let n;a&&(n=a.baseOptions);const o={method:"POST",...n,...s},r={},i={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;r.Authorization="Bearer "+e}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(t.search);for(const a in i)c.set(a,i[a]);for(const a in s.params)c.set(a,s.params[a]);t.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...s.headers};const h="string"!=typeof e||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==e?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseVisualDbTableGet:async(e={})=>{const s=new URL("/api/sysDatabase/visualDbTable","https://example.com");let t;a&&(t=a.baseOptions);const n={method:"GET",...t,...e},o={},r={};if(a&&a.accessToken){const e="function"==typeof a.accessToken?await a.accessToken():await a.accessToken;o.Authorization="Bearer "+e}const i=new URLSearchParams(s.search);for(const a in r)i.set(a,r[a]);for(const a in e.params)i.set(a,e.params[a]);s.search=new URLSearchParams(i).toString();let c=t&&t.headers?t.headers:{};return n.headers={...o,...c,...e.headers},{url:s.pathname+s.search+s.hash,options:n}}}},o=function(e){return{async apiSysDatabaseAddColumnPost(t,o){const r=await n(e).apiSysDatabaseAddColumnPost(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseAddTablePost(t,o){const r=await n(e).apiSysDatabaseAddTablePost(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseBackupDatabasePost(t){const o=await n(e).apiSysDatabaseBackupDatabasePost(t);return(e=a,t=s)=>{const n={...o.options,url:t+o.url};return e.request(n)}},async apiSysDatabaseColumnListTableNameConfigIdGet(t,o,r){const i=await n(e).apiSysDatabaseColumnListTableNameConfigIdGet(t,o,r);return(e=a,t=s)=>{const n={...i.options,url:t+i.url};return e.request(n)}},async apiSysDatabaseCreateEntityPost(t,o){const r=await n(e).apiSysDatabaseCreateEntityPost(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseCreateSeedDataPost(t,o){const r=await n(e).apiSysDatabaseCreateSeedDataPost(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseDbTypeListConfigIdGet(t,o){const r=await n(e).apiSysDatabaseDbTypeListConfigIdGet(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseDeleteColumnPost(t,o){const r=await n(e).apiSysDatabaseDeleteColumnPost(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseDeleteTablePost(t,o){const r=await n(e).apiSysDatabaseDeleteTablePost(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseListGet(t){const o=await n(e).apiSysDatabaseListGet(t);return(e=a,t=s)=>{const n={...o.options,url:t+o.url};return e.request(n)}},async apiSysDatabaseTableListConfigIdGet(t,o){const r=await n(e).apiSysDatabaseTableListConfigIdGet(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseUpdateColumnPost(t,o){const r=await n(e).apiSysDatabaseUpdateColumnPost(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseUpdateTablePost(t,o){const r=await n(e).apiSysDatabaseUpdateTablePost(t,o);return(e=a,t=s)=>{const n={...r.options,url:t+r.url};return e.request(n)}},async apiSysDatabaseVisualDbTableGet(t){const o=await n(e).apiSysDatabaseVisualDbTableGet(t);return(e=a,t=s)=>{const n={...o.options,url:t+o.url};return e.request(n)}}}};class r extends e{async apiSysDatabaseAddColumnPost(a,e){return o(this.configuration).apiSysDatabaseAddColumnPost(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseAddTablePost(a,e){return o(this.configuration).apiSysDatabaseAddTablePost(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseBackupDatabasePost(a){return o(this.configuration).apiSysDatabaseBackupDatabasePost(a).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseColumnListTableNameConfigIdGet(a,e,s){return o(this.configuration).apiSysDatabaseColumnListTableNameConfigIdGet(a,e,s).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseCreateEntityPost(a,e){return o(this.configuration).apiSysDatabaseCreateEntityPost(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseCreateSeedDataPost(a,e){return o(this.configuration).apiSysDatabaseCreateSeedDataPost(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseDbTypeListConfigIdGet(a,e){return o(this.configuration).apiSysDatabaseDbTypeListConfigIdGet(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseDeleteColumnPost(a,e){return o(this.configuration).apiSysDatabaseDeleteColumnPost(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseDeleteTablePost(a,e){return o(this.configuration).apiSysDatabaseDeleteTablePost(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseListGet(a){return o(this.configuration).apiSysDatabaseListGet(a).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseTableListConfigIdGet(a,e){return o(this.configuration).apiSysDatabaseTableListConfigIdGet(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseUpdateColumnPost(a,e){return o(this.configuration).apiSysDatabaseUpdateColumnPost(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseUpdateTablePost(a,e){return o(this.configuration).apiSysDatabaseUpdateTablePost(a,e).then((a=>a(this.axios,this.basePath)))}async apiSysDatabaseVisualDbTableGet(a){return o(this.configuration).apiSysDatabaseVisualDbTableGet(a).then((a=>a(this.axios,this.basePath)))}}export{r as S};
