import{a as e}from"./axios-CURSphCx.js";import{B as t,j as s}from"./index-DWGcUZYU.js";const a=function(e){return{apiSysNoticeAddPost:async(t,s={})=>{const a=new URL("/api/sysNotice/add","https://example.com");let o;e&&(o=e.baseOptions);const n={method:"POST",...o,...s},i={},c={};if(e&&e.accessToken){const t="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;i.Authorization="Bearer "+t}i["Content-Type"]="application/json-patch+json";const r=new URLSearchParams(a.search);for(const e in c)r.set(e,c[e]);for(const e in s.params)r.set(e,s.params[e]);a.search=new URLSearchParams(r).toString();let p=o&&o.headers?o.headers:{};n.headers={...i,...p,...s.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysNoticeDeletePost:async(t,s={})=>{const a=new URL("/api/sysNotice/delete","https://example.com");let o;e&&(o=e.baseOptions);const n={method:"POST",...o,...s},i={},c={};if(e&&e.accessToken){const t="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;i.Authorization="Bearer "+t}i["Content-Type"]="application/json-patch+json";const r=new URLSearchParams(a.search);for(const e in c)r.set(e,c[e]);for(const e in s.params)r.set(e,s.params[e]);a.search=new URLSearchParams(r).toString();let p=o&&o.headers?o.headers:{};n.headers={...i,...p,...s.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysNoticePagePost:async(t,s={})=>{const a=new URL("/api/sysNotice/page","https://example.com");let o;e&&(o=e.baseOptions);const n={method:"POST",...o,...s},i={},c={};if(e&&e.accessToken){const t="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;i.Authorization="Bearer "+t}i["Content-Type"]="application/json-patch+json";const r=new URLSearchParams(a.search);for(const e in c)r.set(e,c[e]);for(const e in s.params)r.set(e,s.params[e]);a.search=new URLSearchParams(r).toString();let p=o&&o.headers?o.headers:{};n.headers={...i,...p,...s.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysNoticePageReceivedGet:async(t,s,a,o,n,i,c,r,p,h,d,y,u,S,l,P={})=>{const m=new URL("/api/sysNotice/pageReceived","https://example.com");let f;e&&(f=e.baseOptions);const N={method:"GET",...f,...P},T={},w={};if(e&&e.accessToken){const t="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;T.Authorization="Bearer "+t}void 0!==t&&(w.Title=t),void 0!==s&&(w.Type=s),void 0!==a&&(w.Page=a),void 0!==o&&(w.PageSize=o),void 0!==n&&(w.Field=n),void 0!==i&&(w.Order=i),void 0!==c&&(w.DescStr=c),r&&(w["Search.Fields"]=r),void 0!==p&&(w["Search.Keyword"]=p),void 0!==h&&(w.Keyword=h),void 0!==d&&(w["Filter.Logic"]=d),y&&(w["Filter.Filters"]=y),void 0!==u&&(w["Filter.Field"]=u),void 0!==S&&(w["Filter.Operator"]=S),void 0!==l&&(w["Filter.Value"]=l);const g=new URLSearchParams(m.search);for(const e in w)g.set(e,w[e]);for(const e in P.params)g.set(e,P.params[e]);m.search=new URLSearchParams(g).toString();let R=f&&f.headers?f.headers:{};return N.headers={...T,...R,...P.headers},{url:m.pathname+m.search+m.hash,options:N}},apiSysNoticePublicPost:async(t,s={})=>{const a=new URL("/api/sysNotice/public","https://example.com");let o;e&&(o=e.baseOptions);const n={method:"POST",...o,...s},i={},c={};if(e&&e.accessToken){const t="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;i.Authorization="Bearer "+t}i["Content-Type"]="application/json-patch+json";const r=new URLSearchParams(a.search);for(const e in c)r.set(e,c[e]);for(const e in s.params)r.set(e,s.params[e]);a.search=new URLSearchParams(r).toString();let p=o&&o.headers?o.headers:{};n.headers={...i,...p,...s.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysNoticeSetReadPost:async(t,s={})=>{const a=new URL("/api/sysNotice/setRead","https://example.com");let o;e&&(o=e.baseOptions);const n={method:"POST",...o,...s},i={},c={};if(e&&e.accessToken){const t="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;i.Authorization="Bearer "+t}i["Content-Type"]="application/json-patch+json";const r=new URLSearchParams(a.search);for(const e in c)r.set(e,c[e]);for(const e in s.params)r.set(e,s.params[e]);a.search=new URLSearchParams(r).toString();let p=o&&o.headers?o.headers:{};n.headers={...i,...p,...s.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysNoticeUnReadListGet:async(t={})=>{const s=new URL("/api/sysNotice/unReadList","https://example.com");let a;e&&(a=e.baseOptions);const o={method:"GET",...a,...t},n={},i={};if(e&&e.accessToken){const t="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;n.Authorization="Bearer "+t}const c=new URLSearchParams(s.search);for(const e in i)c.set(e,i[e]);for(const e in t.params)c.set(e,t.params[e]);s.search=new URLSearchParams(c).toString();let r=a&&a.headers?a.headers:{};return o.headers={...n,...r,...t.headers},{url:s.pathname+s.search+s.hash,options:o}},apiSysNoticeUpdatePost:async(t,s={})=>{const a=new URL("/api/sysNotice/update","https://example.com");let o;e&&(o=e.baseOptions);const n={method:"POST",...o,...s},i={},c={};if(e&&e.accessToken){const t="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;i.Authorization="Bearer "+t}i["Content-Type"]="application/json-patch+json";const r=new URLSearchParams(a.search);for(const e in c)r.set(e,c[e]);for(const e in s.params)r.set(e,s.params[e]);a.search=new URLSearchParams(r).toString();let p=o&&o.headers?o.headers:{};n.headers={...i,...p,...s.headers};const h="string"!=typeof t||"application/json"===n.headers["Content-Type"];return n.data=h?JSON.stringify(void 0!==t?t:{}):t||"",{url:a.pathname+a.search+a.hash,options:n}}}},o=function(t){return{async apiSysNoticeAddPost(o,n){const i=await a(t).apiSysNoticeAddPost(o,n);return(t=e,a=s)=>{const o={...i.options,url:a+i.url};return t.request(o)}},async apiSysNoticeDeletePost(o,n){const i=await a(t).apiSysNoticeDeletePost(o,n);return(t=e,a=s)=>{const o={...i.options,url:a+i.url};return t.request(o)}},async apiSysNoticePagePost(o,n){const i=await a(t).apiSysNoticePagePost(o,n);return(t=e,a=s)=>{const o={...i.options,url:a+i.url};return t.request(o)}},async apiSysNoticePageReceivedGet(o,n,i,c,r,p,h,d,y,u,S,l,P,m,f,N){const T=await a(t).apiSysNoticePageReceivedGet(o,n,i,c,r,p,h,d,y,u,S,l,P,m,f,N);return(t=e,a=s)=>{const o={...T.options,url:a+T.url};return t.request(o)}},async apiSysNoticePublicPost(o,n){const i=await a(t).apiSysNoticePublicPost(o,n);return(t=e,a=s)=>{const o={...i.options,url:a+i.url};return t.request(o)}},async apiSysNoticeSetReadPost(o,n){const i=await a(t).apiSysNoticeSetReadPost(o,n);return(t=e,a=s)=>{const o={...i.options,url:a+i.url};return t.request(o)}},async apiSysNoticeUnReadListGet(o){const n=await a(t).apiSysNoticeUnReadListGet(o);return(t=e,a=s)=>{const o={...n.options,url:a+n.url};return t.request(o)}},async apiSysNoticeUpdatePost(o,n){const i=await a(t).apiSysNoticeUpdatePost(o,n);return(t=e,a=s)=>{const o={...i.options,url:a+i.url};return t.request(o)}}}};class n extends t{async apiSysNoticeAddPost(e,t){return o(this.configuration).apiSysNoticeAddPost(e,t).then((e=>e(this.axios,this.basePath)))}async apiSysNoticeDeletePost(e,t){return o(this.configuration).apiSysNoticeDeletePost(e,t).then((e=>e(this.axios,this.basePath)))}async apiSysNoticePagePost(e,t){return o(this.configuration).apiSysNoticePagePost(e,t).then((e=>e(this.axios,this.basePath)))}async apiSysNoticePageReceivedGet(e,t,s,a,n,i,c,r,p,h,d,y,u,S,l,P){return o(this.configuration).apiSysNoticePageReceivedGet(e,t,s,a,n,i,c,r,p,h,d,y,u,S,l,P).then((e=>e(this.axios,this.basePath)))}async apiSysNoticePublicPost(e,t){return o(this.configuration).apiSysNoticePublicPost(e,t).then((e=>e(this.axios,this.basePath)))}async apiSysNoticeSetReadPost(e,t){return o(this.configuration).apiSysNoticeSetReadPost(e,t).then((e=>e(this.axios,this.basePath)))}async apiSysNoticeUnReadListGet(e){return o(this.configuration).apiSysNoticeUnReadListGet(e).then((e=>e(this.axios,this.basePath)))}async apiSysNoticeUpdatePost(e,t){return o(this.configuration).apiSysNoticeUpdatePost(e,t).then((e=>e(this.axios,this.basePath)))}}export{n as S};
