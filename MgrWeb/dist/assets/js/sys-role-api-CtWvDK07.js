import{a as e}from"./axios-CURSphCx.js";import{B as s,j as t,R as a}from"./index-DWGcUZYU.js";const n=function(e){return{apiSysRoleAddPost:async(s,t={})=>{const a=new URL("/api/sysRole/add","https://example.com");let n;e&&(n=e.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const e in i)c.set(e,i[e]);for(const e in t.params)c.set(e,t.params[e]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysRoleDeletePost:async(s,t={})=>{const a=new URL("/api/sysRole/delete","https://example.com");let n;e&&(n=e.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const e in i)c.set(e,i[e]);for(const e in t.params)c.set(e,t.params[e]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysRoleGrantDataScopePost:async(s,t={})=>{const a=new URL("/api/sysRole/grantDataScope","https://example.com");let n;e&&(n=e.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const e in i)c.set(e,i[e]);for(const e in t.params)c.set(e,t.params[e]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysRoleGrantMenuPost:async(s,t={})=>{const a=new URL("/api/sysRole/grantMenu","https://example.com");let n;e&&(n=e.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const e in i)c.set(e,i[e]);for(const e in t.params)c.set(e,t.params[e]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysRoleListGet:async(s={})=>{const t=new URL("/api/sysRole/list","https://example.com");let a;e&&(a=e.baseOptions);const n={method:"GET",...a,...s},o={},r={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;o.Authorization="Bearer "+s}const i=new URLSearchParams(t.search);for(const e in r)i.set(e,r[e]);for(const e in s.params)i.set(e,s.params[e]);t.search=new URLSearchParams(i).toString();let c=a&&a.headers?a.headers:{};return n.headers={...o,...c,...s.headers},{url:t.pathname+t.search+t.hash,options:n}},apiSysRoleOwnMenuListGet:async(s,t,n={})=>{if(null==s)throw new a("id","Required parameter id was null or undefined when calling apiSysRoleOwnMenuListGet.");const o=new URL("/api/sysRole/ownMenuList","https://example.com");let r;e&&(r=e.baseOptions);const i={method:"GET",...r,...n},c={},p={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;c.Authorization="Bearer "+s}void 0!==t&&(p.Status=t),void 0!==s&&(p.Id=s);const h=new URLSearchParams(o.search);for(const e in p)h.set(e,p[e]);for(const e in n.params)h.set(e,n.params[e]);o.search=new URLSearchParams(h).toString();let l=r&&r.headers?r.headers:{};return i.headers={...c,...l,...n.headers},{url:o.pathname+o.search+o.hash,options:i}},apiSysRoleOwnOrgListGet:async(s,t,n={})=>{if(null==s)throw new a("id","Required parameter id was null or undefined when calling apiSysRoleOwnOrgListGet.");const o=new URL("/api/sysRole/ownOrgList","https://example.com");let r;e&&(r=e.baseOptions);const i={method:"GET",...r,...n},c={},p={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;c.Authorization="Bearer "+s}void 0!==t&&(p.Status=t),void 0!==s&&(p.Id=s);const h=new URLSearchParams(o.search);for(const e in p)h.set(e,p[e]);for(const e in n.params)h.set(e,n.params[e]);o.search=new URLSearchParams(h).toString();let l=r&&r.headers?r.headers:{};return i.headers={...c,...l,...n.headers},{url:o.pathname+o.search+o.hash,options:i}},apiSysRolePagePost:async(s,t={})=>{const a=new URL("/api/sysRole/page","https://example.com");let n;e&&(n=e.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const e in i)c.set(e,i[e]);for(const e in t.params)c.set(e,t.params[e]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysRoleSetStatusPost:async(s,t={})=>{const a=new URL("/api/sysRole/setStatus","https://example.com");let n;e&&(n=e.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const e in i)c.set(e,i[e]);for(const e in t.params)c.set(e,t.params[e]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysRoleUpdatePost:async(s,t={})=>{const a=new URL("/api/sysRole/update","https://example.com");let n;e&&(n=e.baseOptions);const o={method:"POST",...n,...t},r={},i={};if(e&&e.accessToken){const s="function"==typeof e.accessToken?await e.accessToken():await e.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const e in i)c.set(e,i[e]);for(const e in t.params)c.set(e,t.params[e]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...t.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}}}},o=function(s){return{async apiSysRoleAddPost(a,o){const r=await n(s).apiSysRoleAddPost(a,o);return(s=e,a=t)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysRoleDeletePost(a,o){const r=await n(s).apiSysRoleDeletePost(a,o);return(s=e,a=t)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysRoleGrantDataScopePost(a,o){const r=await n(s).apiSysRoleGrantDataScopePost(a,o);return(s=e,a=t)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysRoleGrantMenuPost(a,o){const r=await n(s).apiSysRoleGrantMenuPost(a,o);return(s=e,a=t)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysRoleListGet(a){const o=await n(s).apiSysRoleListGet(a);return(s=e,a=t)=>{const n={...o.options,url:a+o.url};return s.request(n)}},async apiSysRoleOwnMenuListGet(a,o,r){const i=await n(s).apiSysRoleOwnMenuListGet(a,o,r);return(s=e,a=t)=>{const n={...i.options,url:a+i.url};return s.request(n)}},async apiSysRoleOwnOrgListGet(a,o,r){const i=await n(s).apiSysRoleOwnOrgListGet(a,o,r);return(s=e,a=t)=>{const n={...i.options,url:a+i.url};return s.request(n)}},async apiSysRolePagePost(a,o){const r=await n(s).apiSysRolePagePost(a,o);return(s=e,a=t)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysRoleSetStatusPost(a,o){const r=await n(s).apiSysRoleSetStatusPost(a,o);return(s=e,a=t)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysRoleUpdatePost(a,o){const r=await n(s).apiSysRoleUpdatePost(a,o);return(s=e,a=t)=>{const n={...r.options,url:a+r.url};return s.request(n)}}}};class r extends s{async apiSysRoleAddPost(e,s){return o(this.configuration).apiSysRoleAddPost(e,s).then((e=>e(this.axios,this.basePath)))}async apiSysRoleDeletePost(e,s){return o(this.configuration).apiSysRoleDeletePost(e,s).then((e=>e(this.axios,this.basePath)))}async apiSysRoleGrantDataScopePost(e,s){return o(this.configuration).apiSysRoleGrantDataScopePost(e,s).then((e=>e(this.axios,this.basePath)))}async apiSysRoleGrantMenuPost(e,s){return o(this.configuration).apiSysRoleGrantMenuPost(e,s).then((e=>e(this.axios,this.basePath)))}async apiSysRoleListGet(e){return o(this.configuration).apiSysRoleListGet(e).then((e=>e(this.axios,this.basePath)))}async apiSysRoleOwnMenuListGet(e,s,t){return o(this.configuration).apiSysRoleOwnMenuListGet(e,s,t).then((e=>e(this.axios,this.basePath)))}async apiSysRoleOwnOrgListGet(e,s,t){return o(this.configuration).apiSysRoleOwnOrgListGet(e,s,t).then((e=>e(this.axios,this.basePath)))}async apiSysRolePagePost(e,s){return o(this.configuration).apiSysRolePagePost(e,s).then((e=>e(this.axios,this.basePath)))}async apiSysRoleSetStatusPost(e,s){return o(this.configuration).apiSysRoleSetStatusPost(e,s).then((e=>e(this.axios,this.basePath)))}async apiSysRoleUpdatePost(e,s){return o(this.configuration).apiSysRoleUpdatePost(e,s).then((e=>e(this.axios,this.basePath)))}}export{r as S};
