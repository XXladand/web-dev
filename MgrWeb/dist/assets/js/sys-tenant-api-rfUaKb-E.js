import{a as t}from"./axios-CURSphCx.js";import{B as s,j as e}from"./index-DWGcUZYU.js";const a=function(t){return{apiSysTenantAddPost:async(s,e={})=>{const a=new URL("/api/sysTenant/add","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantCreateDbPost:async(s,e={})=>{const a=new URL("/api/sysTenant/createDb","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantDeletePost:async(s,e={})=>{const a=new URL("/api/sysTenant/delete","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantGrantMenuPost:async(s,e={})=>{const a=new URL("/api/sysTenant/grantMenu","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantOwnMenuListGet:async(s,e={})=>{const a=new URL("/api/sysTenant/ownMenuList","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"GET",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}void 0!==s&&(i.UserId=s);const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};return o.headers={...r,...p,...e.headers},{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantPagePost:async(s,e={})=>{const a=new URL("/api/sysTenant/page","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantResetPwdPost:async(s,e={})=>{const a=new URL("/api/sysTenant/resetPwd","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantSetStatusPost:async(s,e={})=>{const a=new URL("/api/sysTenant/setStatus","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantUpdatePost:async(s,e={})=>{const a=new URL("/api/sysTenant/update","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}},apiSysTenantUserListPost:async(s,e={})=>{const a=new URL("/api/sysTenant/userList","https://example.com");let n;t&&(n=t.baseOptions);const o={method:"POST",...n,...e},r={},i={};if(t&&t.accessToken){const s="function"==typeof t.accessToken?await t.accessToken():await t.accessToken;r.Authorization="Bearer "+s}r["Content-Type"]="application/json-patch+json";const c=new URLSearchParams(a.search);for(const t in i)c.set(t,i[t]);for(const t in e.params)c.set(t,e.params[t]);a.search=new URLSearchParams(c).toString();let p=n&&n.headers?n.headers:{};o.headers={...r,...p,...e.headers};const h="string"!=typeof s||"application/json"===o.headers["Content-Type"];return o.data=h?JSON.stringify(void 0!==s?s:{}):s||"",{url:a.pathname+a.search+a.hash,options:o}}}},n=function(s){return{async apiSysTenantAddPost(n,o){const r=await a(s).apiSysTenantAddPost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantCreateDbPost(n,o){const r=await a(s).apiSysTenantCreateDbPost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantDeletePost(n,o){const r=await a(s).apiSysTenantDeletePost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantGrantMenuPost(n,o){const r=await a(s).apiSysTenantGrantMenuPost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantOwnMenuListGet(n,o){const r=await a(s).apiSysTenantOwnMenuListGet(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantPagePost(n,o){const r=await a(s).apiSysTenantPagePost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantResetPwdPost(n,o){const r=await a(s).apiSysTenantResetPwdPost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantSetStatusPost(n,o){const r=await a(s).apiSysTenantSetStatusPost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantUpdatePost(n,o){const r=await a(s).apiSysTenantUpdatePost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}},async apiSysTenantUserListPost(n,o){const r=await a(s).apiSysTenantUserListPost(n,o);return(s=t,a=e)=>{const n={...r.options,url:a+r.url};return s.request(n)}}}};class o extends s{async apiSysTenantAddPost(t,s){return n(this.configuration).apiSysTenantAddPost(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantCreateDbPost(t,s){return n(this.configuration).apiSysTenantCreateDbPost(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantDeletePost(t,s){return n(this.configuration).apiSysTenantDeletePost(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantGrantMenuPost(t,s){return n(this.configuration).apiSysTenantGrantMenuPost(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantOwnMenuListGet(t,s){return n(this.configuration).apiSysTenantOwnMenuListGet(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantPagePost(t,s){return n(this.configuration).apiSysTenantPagePost(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantResetPwdPost(t,s){return n(this.configuration).apiSysTenantResetPwdPost(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantSetStatusPost(t,s){return n(this.configuration).apiSysTenantSetStatusPost(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantUpdatePost(t,s){return n(this.configuration).apiSysTenantUpdatePost(t,s).then((t=>t(this.axios,this.basePath)))}async apiSysTenantUserListPost(t,s){return n(this.configuration).apiSysTenantUserListPost(t,s).then((t=>t(this.axios,this.basePath)))}}export{o as S};
